{
  "name": "codechecker",
  "displayName": "CodeChecker",
  "author": "Ericsson",
  "publisher": "codechecker",
  "description": "CodeChecker integration for Visual Studio Code",
  "icon": "media/codechecker_logo.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/Ericsson/CodeCheckerVSCodePlugin"
  },
  "homepage": "https://github.com/Ericsson/CodeCheckerVSCodePlugin/tree/main/README.md",
  "bugs": {
    "url": "https://github.com/Ericsson/CodeCheckerVSCodePlugin/issues"
  },
  "license": "Apache-2.0",
  "version": "1.2.0",
  "engines": {
    "vscode": "^1.53.0"
  },
  "categories": [
    "Linters",
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "CodeChecker",
    "C",
    "C++",
    "linters",
    "code analysis"
  ],
  "activationEvents": [
    "onCommand:codechecker.backend.reloadMetadata",
    "onView:codechecker.views.overview",
    "onFileSystem:file"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "codechecker.backend.reloadMetadata",
        "title": "CodeChecker: Reload metadata"
      },
      {
        "command": "codechecker.editor.nextStep",
        "title": "CodeChecker: Next reproduction step"
      },
      {
        "command": "codechecker.editor.previousStep",
        "title": "CodeChecker: Previous reproduction step"
      },
      {
        "command": "codechecker.editor.showSetupDialog",
        "title": "CodeChecker: Show database setup dialog"
      },
      {
        "command": "codechecker.executor.analyzeCurrentFile",
        "title": "CodeChecker: Analyze current file"
      },
      {
        "command": "codechecker.executor.analyzeSelectedFiles",
        "title": "CodeChecker: Analyze selected files..."
      },
      {
        "command": "codechecker.executor.analyzeProject",
        "title": "CodeChecker: Analyze entire project"
      },
      {
        "command": "codechecker.executor.showCommandLine",
        "title": "CodeChecker: Show full command line"
      },
      {
        "command": "codechecker.logging.showOutput",
        "title": "CodeChecker: Show Output"
      },
      {
        "command": "codechecker.executor.stopAnalysis",
        "title": "CodeChecker: Stop analysis"
      }
    ],
    "configuration": {
      "title": "CodeChecker",
      "properties": {
        "codechecker.executor.executablePath": {
          "type": "string",
          "description": "Path to CodeChecker's executable",
          "default": "CodeChecker",
          "order": 1
        },
        "codechecker.backend.outputFolder": {
          "type": "string",
          "description": "Output folder for CodeChecker's analysis files",
          "default": "${workspaceFolder}/.codechecker",
          "order": 2
        },
        "codechecker.backend.compilationDatabasePath": {
          "type": [
            "string",
            "null"
          ],
          "description": "Path to a custom compilation database, in case of a custom build system",
          "default": null,
          "order": 3
        },
        "codechecker.executor.arguments": {
          "type": "string",
          "description": "Additional arguments to CodeChecker analyze command. For example, if you want to use a config file for CodeChecker pass '--config <config.json>'. For supported arguments, run `CodeChecker analyze --help`. The command `CodeChecker: Show full command line` command shows the resulting command line.",
          "default": "",
          "order": 4
        },
        "codechecker.executor.threadCount": {
          "type": [
            "number",
            "null"
          ],
          "description": "CodeChecker's thread count - leave empty to use all threads",
          "default": null,
          "minimum": 1,
          "order": 5
        },
        "codechecker.editor.showDatabaseDialog": {
          "type": "boolean",
          "description": "Show a dialog if the compilation database is not found",
          "default": true
        },
        "codechecker.editor.enableCodeLens": {
          "type": "boolean",
          "description": "Enable CodeLens for displaying the reproduction path",
          "default": true
        },
        "codechecker.executor.runOnSave": {
          "type": "boolean",
          "description": "Controls auto-run of CodeChecker on save",
          "default": true
        }
      }
    },
    "keybindings": [
      {
        "command": "codechecker.editor.nextStep",
        "key": "ctrl-f7",
        "mac": "cmd-f7",
        "when": "editorTextFocus"
      },
      {
        "command": "codechecker.editor.previousStep",
        "key": "ctrl-shift-f7",
        "mac": "cmd-shift-f7",
        "when": "editorTextFocus"
      }
    ],
    "taskDefinitions": [
      {
        "type": "CodeChecker",
        "required": [
          "taskType"
        ],
        "properties": {
          "taskType": {
            "type": "string",
            "description": "The type of the CodeChecker task",
            "enum": [
              "project",
              "currentFile",
              "selectedFiles"
            ]
          },
          "selectedFiles": {
            "type": "array",
            "description": "When using type `selectedFiles`, analyze the selected files."
          }
        }
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "codechecker",
          "title": "CodeChecker",
          "icon": "media/codechecker_logo.svg"
        }
      ]
    },
    "views": {
      "codechecker": [
        {
          "id": "codechecker.views.overview",
          "name": "Overview",
          "icon": "media/codechecker_logo.svg",
          "contextualTitle": "CodeChecker"
        },
        {
          "id": "codechecker.views.reports",
          "name": "Reports in current file",
          "icon": "media/codechecker_logo.svg",
          "contextualTitle": "CodeChecker",
          "when": "codechecker.sidebar.showReports"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run package",
    "deploy": "vsce publish --yarn",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "test-compile": "tsc -p ./",
    "test-watch": "tsc -watch -p ./",
    "pretest": "yarn run test-compile && yarn run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/vscode": "1.53.0",
    "@types/glob": "^7.1.3",
    "@types/mocha": "^8.0.4",
    "@types/node": "^12.11.7",
    "eslint": "^7.19.0",
    "@typescript-eslint/eslint-plugin": "^4.14.1",
    "@typescript-eslint/parser": "^4.14.1",
    "glob": "^7.1.6",
    "mocha": "^8.2.1",
    "typescript": "^4.1.3",
    "vscode-test": "^1.5.0",
    "ts-loader": "^8.0.14",
    "vsce": "^1.100.1",
    "webpack": "^5.19.0",
    "webpack-cli": "^4.4.0"
  }
}
